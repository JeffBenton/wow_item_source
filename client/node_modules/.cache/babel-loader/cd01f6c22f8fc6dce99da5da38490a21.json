{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/src/components/Azerite/FilterAzerite.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCards, fetchAzerite } from \"../../actions/itemActions\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nclass FilterAzerite extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sources: [\"Raid\", \"Dungeon\", \"Pvp\"],\n      slots: [\"Helm\", \"Chest\", \"Shoulder\"]\n    };\n\n    this.handleClassSelection = e => {\n      this.props.setClass(e.target.title);\n      this.props.fetchAzerite({\n        class: e.target.title,\n        sources: this.state.sources,\n        slots: this.state.slots\n      });\n    };\n\n    this.handleSourceSelection = e => {};\n\n    this.handleSlotSelection = e => {};\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(DropdownButton, {\n      id: \"dropdown-class-button\",\n      title: this.props.char_class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, ['Death Knight', 'Demon Hunter', 'Druid', 'Hunter', 'Mage', 'Monk', 'Paladin', 'Priest', 'Rogue', 'Shaman', 'Warlock', 'Warrior'].map(cls => React.createElement(\"div\", {\n      key: cls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      onClick: this.handleClassSelection,\n      title: cls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, cls)))), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, ['Raid', 'Dungeon', 'PvP'].map(source => React.createElement(\"div\", {\n      key: source,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      onChange: this.handleSourceSelection,\n      custom: true,\n      label: source,\n      type: \"checkbox\",\n      id: source,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })))), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, ['Helm', 'Shoulder', 'Chest'].map(slot => React.createElement(\"div\", {\n      key: slot,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      onChange: this.handleSlotSelection,\n      custom: true,\n      label: slot,\n      type: \"checkbox\",\n      id: slot,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nFilterAzerite.defaultProps = {\n  char_class: \"Select a Class\"\n};\n\nconst mapStateToProps = state => {\n  return {\n    char_class: state.char_class,\n    sources: {\n      raid: true,\n      dungeon: true,\n      pvp: true\n    },\n    slots: {\n      helm: true,\n      shoulder: true,\n      chest: true\n    }\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCards: path => dispatch(fetchCards(path)),\n    fetchAzerite: params => dispatch(fetchAzerite(params)),\n    setClass: char_class => dispatch({\n      type: \"SET_CLASS\",\n      char_class\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterAzerite);","map":{"version":3,"sources":["/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/src/components/Azerite/FilterAzerite.js"],"names":["React","Component","connect","fetchCards","fetchAzerite","Dropdown","DropdownButton","Form","Container","Row","FilterAzerite","state","sources","slots","handleClassSelection","e","props","setClass","target","title","class","handleSourceSelection","handleSlotSelection","render","char_class","map","cls","source","slot","defaultProps","mapStateToProps","raid","dungeon","pvp","helm","shoulder","chest","mapDispatchToProps","dispatch","path","params","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCards, fetchAzerite } from \"../../actions/itemActions\";\n\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Form from 'react-bootstrap/Form'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\n\n\nclass FilterAzerite extends Component {\n\n    state = {\n        sources: [\"Raid\", \"Dungeon\", \"Pvp\"],\n        slots: [\"Helm\", \"Chest\", \"Shoulder\"]\n    };\n\n    handleClassSelection = e => {\n        this.props.setClass(e.target.title);\n        this.props.fetchAzerite({ class: e.target.title, sources: this.state.sources, slots: this.state.slots })\n    };\n\n    handleSourceSelection = e => {\n\n    };\n\n    handleSlotSelection = e => {\n\n    };\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <DropdownButton id=\"dropdown-class-button\" title={this.props.char_class}>\n                        {['Death Knight', 'Demon Hunter', 'Druid', 'Hunter', 'Mage', 'Monk', 'Paladin', 'Priest', 'Rogue', 'Shaman', 'Warlock', 'Warrior'].map(cls => (\n                            <div key={cls}>\n                                <Dropdown.Item onClick={this.handleClassSelection} title={cls}>{cls}</Dropdown.Item>\n                            </div>\n                        ))}\n                    </DropdownButton>\n\n                    <Form>\n                        {['Raid', 'Dungeon', 'PvP'].map(source => (\n                            <div key={source}>\n                                <Form.Check\n                                    onChange={this.handleSourceSelection}\n                                    custom\n                                    label={source}\n                                    type=\"checkbox\"\n                                    id={source}\n                                />\n                            </div>\n                        ))}\n                    </Form>\n                    <Form>\n                        {['Helm', 'Shoulder', 'Chest'].map(slot => (\n                            <div key={slot}>\n                                <Form.Check\n                                    onChange={this.handleSlotSelection}\n                                    custom\n                                    label={slot}\n                                    type=\"checkbox\"\n                                    id={slot}\n                                />\n                            </div>\n                        ))}\n                    </Form>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nFilterAzerite.defaultProps = {\n    char_class: \"Select a Class\"\n};\n\nconst mapStateToProps = state => {\n    return {\n        char_class: state.char_class,\n        sources: {\n            raid: true,\n            dungeon: true,\n            pvp: true\n        },\n        slots: {\n            helm: true,\n            shoulder: true,\n            chest: true\n        }\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchCards: path => dispatch(fetchCards(path)),\n        fetchAzerite: params => dispatch(fetchAzerite(params)),\n        setClass: char_class => dispatch({ type: \"SET_CLASS\", char_class })\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterAzerite)\n"]},"metadata":{},"sourceType":"module"}