{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/src/components/Trinkets/FilterTrinkets.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCards } from \"../../actions/itemActions\";\nimport Row from \"react-bootstrap/Row\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\n\nclass FilterTrinkets extends Component {\n  componentDidMount() {\n    this.props.fetchCards(this.props.path);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(DropdownButton, {\n      id: \"dropdown-trinket-button\",\n      title: \"Role\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, ['Death Knight', 'Demon Hunter', 'Druid', 'Hunter', 'Mage', 'Monk', 'Paladin', 'Priest', 'Rogue', 'Shaman', 'Warlock', 'Warrior'].map(cls => React.createElement(\"div\", {\n      key: cls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      onClick: this.handleClassSelection,\n      title: cls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, cls)))), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, ['Raid', 'Dungeon', 'PvP'].map(source => React.createElement(\"div\", {\n      key: source,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      onChange: this.handleSourceSelection,\n      custom: true,\n      checked: true,\n      label: source,\n      type: \"checkbox\",\n      id: source,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })))), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, ['Head', 'Shoulder', 'Chest'].map(slot => React.createElement(\"div\", {\n      key: slot,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      onChange: this.handleSlotSelection,\n      custom: true,\n      checked: true,\n      label: slot,\n      type: \"checkbox\",\n      id: slot,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCards: path => dispatch(fetchCards(path))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(FilterTrinkets);","map":{"version":3,"sources":["/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/src/components/Trinkets/FilterTrinkets.js"],"names":["React","Component","connect","fetchCards","Row","DropdownButton","Dropdown","Form","Container","FilterTrinkets","componentDidMount","props","path","render","map","cls","handleClassSelection","source","handleSourceSelection","slot","handleSlotSelection","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AAEA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAEnCS,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWR,UAAX,CAAsB,KAAKQ,KAAL,CAAWC,IAAjC;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AAAgB,MAAA,EAAE,EAAC,yBAAnB;AAA6C,MAAA,KAAK,EAAE,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,cAAD,EAAiB,cAAjB,EAAiC,OAAjC,EAA0C,QAA1C,EAAoD,MAApD,EAA4D,MAA5D,EAAoE,SAApE,EAA+E,QAA/E,EAAyF,OAAzF,EAAkG,QAAlG,EAA4G,SAA5G,EAAuH,SAAvH,EAAkIC,GAAlI,CAAsIC,GAAG,IACtI;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,OAAO,EAAE,KAAKC,oBAA7B;AAAmD,MAAA,KAAK,EAAED,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgEA,GAAhE,CADJ,CADH,CADL,CADJ,EASI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,MAAD,EAAS,SAAT,EAAoB,KAApB,EAA2BD,GAA3B,CAA+BG,MAAM,IAClC;AAAK,MAAA,GAAG,EAAEA,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AACI,MAAA,QAAQ,EAAE,KAAKC,qBADnB;AAEI,MAAA,MAAM,MAFV;AAGI,MAAA,OAAO,MAHX;AAII,MAAA,KAAK,EAAED,MAJX;AAKI,MAAA,IAAI,EAAC,UALT;AAMI,MAAA,EAAE,EAAEA,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,CADL,CATJ,EAuBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,MAAD,EAAS,UAAT,EAAqB,OAArB,EAA8BH,GAA9B,CAAkCK,IAAI,IACnC;AAAK,MAAA,GAAG,EAAEA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AACI,MAAA,QAAQ,EAAE,KAAKC,mBADnB;AAEI,MAAA,MAAM,MAFV;AAGI,MAAA,OAAO,MAHX;AAII,MAAA,KAAK,EAAED,IAJX;AAKI,MAAA,IAAI,EAAC,UALT;AAMI,MAAA,EAAE,EAAEA,IANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,CADL,CAvBJ,CADJ,CADJ;AA0CH;;AAjDkC;;AAoDvC,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHnB,IAAAA,UAAU,EAAES,IAAI,IAAIU,QAAQ,CAACnB,UAAU,CAACS,IAAD,CAAX;AADzB,GAAP;AAGH,CAJD;;AAMA,eAAeV,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCZ,cAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCards } from \"../../actions/itemActions\";\n\nimport Row from \"react-bootstrap/Row\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\n\nclass FilterTrinkets extends Component {\n\n    componentDidMount() {\n        this.props.fetchCards(this.props.path)\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <DropdownButton id=\"dropdown-trinket-button\" title={\"Role\"}>\n                        {['Death Knight', 'Demon Hunter', 'Druid', 'Hunter', 'Mage', 'Monk', 'Paladin', 'Priest', 'Rogue', 'Shaman', 'Warlock', 'Warrior'].map(cls => (\n                            <div key={cls}>\n                                <Dropdown.Item onClick={this.handleClassSelection} title={cls}>{cls}</Dropdown.Item>\n                            </div>\n                        ))}\n                    </DropdownButton>\n\n                    <Form>\n                        {['Raid', 'Dungeon', 'PvP'].map(source => (\n                            <div key={source}>\n                                <Form.Check\n                                    onChange={this.handleSourceSelection}\n                                    custom\n                                    checked\n                                    label={source}\n                                    type=\"checkbox\"\n                                    id={source}\n                                />\n                            </div>\n                        ))}\n                    </Form>\n                    <Form>\n                        {['Head', 'Shoulder', 'Chest'].map(slot => (\n                            <div key={slot}>\n                                <Form.Check\n                                    onChange={this.handleSlotSelection}\n                                    custom\n                                    checked\n                                    label={slot}\n                                    type=\"checkbox\"\n                                    id={slot}\n                                />\n                            </div>\n                        ))}\n                    </Form>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchCards: path => dispatch(fetchCards(path))\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(FilterTrinkets)"]},"metadata":{},"sourceType":"module"}