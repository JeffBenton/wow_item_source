{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/src/components/Trinkets/FilterTrinkets.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTrinkets } from \"../../actions/itemActions\";\nimport Row from \"react-bootstrap/Row\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\n\nclass FilterTrinkets extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleRoleSelection = e => {\n      this.props.setRole(e.target.title); // this.props.fetchTrinkets()\n    };\n\n    this.handleSourceSelection = e => {\n      const value = this.props.sources[e.target.id];\n      console.log(e.target.id, value);\n      this.props.setSource(e.target.id, value); // this.props.fetchTrinkets()\n    };\n  }\n\n  componentDidMount() {\n    // this.props.fetchTrinkets(this.props.path)\n    console.log(this.props);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(DropdownButton, {\n      id: \"dropdown-trinket-button\",\n      title: this.props.role,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, ['Agi Dps', 'Int Dps', 'Str Dps', 'Tank', 'Heal'].map(role => React.createElement(\"div\", {\n      key: role,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      onClick: this.handleRoleSelection,\n      title: role,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, role)))), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, ['Raid', 'Dungeon', 'PvP'].map(source => React.createElement(\"div\", {\n      key: source,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      onChange: this.handleSourceSelection,\n      custom: true,\n      checked: this.props.sources[source],\n      label: source,\n      type: \"checkbox\",\n      id: source,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    role: state.trinkets.role,\n    sources: state.trinkets.sources\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTrinkets: path => dispatch(fetchTrinkets(path)),\n    setRole: role => dispatch({\n      type: \"SET_ROLE\",\n      role\n    }),\n    setSource: source => dispatch({\n      type: \"SET_SOURCE\",\n      source\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterTrinkets);","map":{"version":3,"sources":["/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/src/components/Trinkets/FilterTrinkets.js"],"names":["React","Component","connect","fetchTrinkets","Row","DropdownButton","Dropdown","Form","Container","FilterTrinkets","handleRoleSelection","e","props","setRole","target","title","handleSourceSelection","value","sources","id","console","log","setSource","componentDidMount","render","role","map","source","mapStateToProps","state","trinkets","mapDispatchToProps","dispatch","path","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAOnCS,mBAPmC,GAObC,CAAC,IAAI;AACvB,WAAKC,KAAL,CAAWC,OAAX,CAAmBF,CAAC,CAACG,MAAF,CAASC,KAA5B,EADuB,CAEvB;AACH,KAVkC;;AAAA,SAYnCC,qBAZmC,GAYXL,CAAC,IAAI;AACzB,YAAMM,KAAK,GAAG,KAAKL,KAAL,CAAWM,OAAX,CAAmBP,CAAC,CAACG,MAAF,CAASK,EAA5B,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,CAAC,CAACG,MAAF,CAASK,EAArB,EAAyBF,KAAzB;AACA,WAAKL,KAAL,CAAWU,SAAX,CAAqBX,CAAC,CAACG,MAAF,CAASK,EAA9B,EAAkCF,KAAlC,EAHyB,CAIzB;AAEH,KAlBkC;AAAA;;AAEnCM,EAAAA,iBAAiB,GAAG;AAChB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACH;;AAeDY,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AAAgB,MAAA,EAAE,EAAC,yBAAnB;AAA6C,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWa,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,MAAlC,EAA0C,MAA1C,EAAkDC,GAAlD,CAAsDD,IAAI,IACvD;AAAK,MAAA,GAAG,EAAEA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,OAAO,EAAE,KAAKf,mBAA7B;AAAkD,MAAA,KAAK,EAAEe,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgEA,IAAhE,CADJ,CADH,CADL,CADJ,EASI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,MAAD,EAAS,SAAT,EAAoB,KAApB,EAA2BC,GAA3B,CAA+BC,MAAM,IAClC;AAAK,MAAA,GAAG,EAAEA,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AACI,MAAA,QAAQ,EAAE,KAAKX,qBADnB;AAEI,MAAA,MAAM,MAFV;AAGI,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWM,OAAX,CAAmBS,MAAnB,CAHb;AAII,MAAA,KAAK,EAAEA,MAJX;AAKI,MAAA,IAAI,EAAC,UALT;AAMI,MAAA,EAAE,EAAEA,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,CADL,CATJ,CADJ,CADJ;AA4BH;;AAjDkC;;AAoDvC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHJ,IAAAA,IAAI,EAAEI,KAAK,CAACC,QAAN,CAAeL,IADlB;AAEHP,IAAAA,OAAO,EAAEW,KAAK,CAACC,QAAN,CAAeZ;AAFrB,GAAP;AAIH,CALD;;AAOA,MAAMa,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACH7B,IAAAA,aAAa,EAAE8B,IAAI,IAAID,QAAQ,CAAC7B,aAAa,CAAC8B,IAAD,CAAd,CAD5B;AAEHpB,IAAAA,OAAO,EAAEY,IAAI,IAAIO,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,UAAR;AAAoBT,MAAAA;AAApB,KAAD,CAFtB;AAGHH,IAAAA,SAAS,EAAEK,MAAM,IAAIK,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,YAAR;AAAsBP,MAAAA;AAAtB,KAAD;AAH1B,GAAP;AAKH,CAND;;AAQA,eAAezB,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtB,cAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTrinkets } from \"../../actions/itemActions\";\n\nimport Row from \"react-bootstrap/Row\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\n\nclass FilterTrinkets extends Component {\n\n    componentDidMount() {\n        // this.props.fetchTrinkets(this.props.path)\n        console.log(this.props)\n    }\n\n    handleRoleSelection = e => {\n        this.props.setRole(e.target.title)\n        // this.props.fetchTrinkets()\n    };\n\n    handleSourceSelection = e => {\n        const value = this.props.sources[e.target.id];\n        console.log(e.target.id, value)\n        this.props.setSource(e.target.id, value);\n        // this.props.fetchTrinkets()\n\n    };\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <DropdownButton id=\"dropdown-trinket-button\" title={this.props.role}>\n                        {['Agi Dps', 'Int Dps', 'Str Dps', 'Tank', 'Heal'].map(role => (\n                            <div key={role}>\n                                <Dropdown.Item onClick={this.handleRoleSelection} title={role}>{role}</Dropdown.Item>\n                            </div>\n                        ))}\n                    </DropdownButton>\n\n                    <Form>\n                        {['Raid', 'Dungeon', 'PvP'].map(source => (\n                            <div key={source}>\n                                <Form.Check\n                                    onChange={this.handleSourceSelection}\n                                    custom\n                                    checked={this.props.sources[source]}\n                                    label={source}\n                                    type=\"checkbox\"\n                                    id={source}\n                                />\n                            </div>\n                        ))}\n                    </Form>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        role: state.trinkets.role,\n        sources: state.trinkets.sources\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchTrinkets: path => dispatch(fetchTrinkets(path)),\n        setRole: role => dispatch({ type: \"SET_ROLE\", role }),\n        setSource: source => dispatch({ type: \"SET_SOURCE\", source })\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterTrinkets)"]},"metadata":{},"sourceType":"module"}