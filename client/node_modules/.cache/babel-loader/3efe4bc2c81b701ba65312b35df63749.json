{"ast":null,"code":"import _defineProperty from \"/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport default function AzeriteReducer(state = {\n  cards: [],\n  char_class: \"Select a Class\",\n  sources: {\n    Raid: true,\n    Dungeon: true,\n    PvP: true\n  },\n  slots: {\n    Head: true,\n    Shoulder: true,\n    Chest: true\n  },\n  loading: false\n}, action) {\n  switch (action.type) {\n    case 'LOADING_AZERITE':\n      return _objectSpread({}, state.azerite, {\n        loading: true\n      });\n\n    case 'ADD_AZERITE':\n      return _objectSpread({}, state.azerite, {\n        cards: _objectSpread({}, state.azerite.cards, {\n          azerite: action.cards\n        }),\n        loading: false\n      });\n\n    case 'DISPLAY_AZERITE':\n      return _objectSpread({}, state.azerite, {\n        piece: action.piece,\n        loading: false\n      });\n\n    case 'SET_CLASS':\n      return _objectSpread({}, state.azerite, {\n        char_class: action.char_class\n      });\n\n    case 'SET_SOURCE':\n      state.sources[action.source] = !action.value;\n      return _objectSpread({}, state.azerite, {\n        sources: _objectSpread({}, state.sources)\n      });\n\n    case 'SET_SLOT':\n      state.slots[action.slot] = !action.value;\n      return _objectSpread({}, state.azerite, {\n        slots: _objectSpread({}, state.slots)\n      });\n\n    default:\n      return state.azerite;\n  }\n}","map":{"version":3,"sources":["/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/src/reducers/AzeriteReducer.js"],"names":["AzeriteReducer","state","cards","char_class","sources","Raid","Dungeon","PvP","slots","Head","Shoulder","Chest","loading","action","type","azerite","piece","source","value","slot"],"mappings":";;;;;;AAAA,eAAe,SAASA,cAAT,CAAwBC,KAAK,GAAG;AAC3CC,EAAAA,KAAK,EAAE,EADoC;AAE3CC,EAAAA,UAAU,EAAE,gBAF+B;AAG3CC,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAE,IADD;AAELC,IAAAA,OAAO,EAAE,IAFJ;AAGLC,IAAAA,GAAG,EAAE;AAHA,GAHkC;AAQ3CC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE,IADH;AAEHC,IAAAA,QAAQ,EAAE,IAFP;AAGHC,IAAAA,KAAK,EAAE;AAHJ,GARoC;AAa3CC,EAAAA,OAAO,EAAE;AAbkC,CAAhC,EAcZC,MAdY,EAcJ;AACP,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AACI,+BACOb,KAAK,CAACc,OADb;AAEIH,QAAAA,OAAO,EAAE;AAFb;;AAKJ,SAAK,aAAL;AACI,+BACOX,KAAK,CAACc,OADb;AAEIb,QAAAA,KAAK,oBACED,KAAK,CAACc,OAAN,CAAcb,KADhB;AAEDa,UAAAA,OAAO,EAAEF,MAAM,CAACX;AAFf,UAFT;AAMIU,QAAAA,OAAO,EAAE;AANb;;AASJ,SAAK,iBAAL;AACI,+BACOX,KAAK,CAACc,OADb;AAEIC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAFlB;AAGIJ,QAAAA,OAAO,EAAE;AAHb;;AAMJ,SAAK,WAAL;AACI,+BACOX,KAAK,CAACc,OADb;AAEIZ,QAAAA,UAAU,EAAEU,MAAM,CAACV;AAFvB;;AAKJ,SAAK,YAAL;AACIF,MAAAA,KAAK,CAACG,OAAN,CAAcS,MAAM,CAACI,MAArB,IAA+B,CAACJ,MAAM,CAACK,KAAvC;AACA,+BACOjB,KAAK,CAACc,OADb;AAEIX,QAAAA,OAAO,oBAAOH,KAAK,CAACG,OAAb;AAFX;;AAKJ,SAAK,UAAL;AACIH,MAAAA,KAAK,CAACO,KAAN,CAAYK,MAAM,CAACM,IAAnB,IAA2B,CAACN,MAAM,CAACK,KAAnC;AACA,+BACOjB,KAAK,CAACc,OADb;AAEIP,QAAAA,KAAK,oBAAOP,KAAK,CAACO,KAAb;AAFT;;AAKJ;AACI,aAAOP,KAAK,CAACc,OAAb;AA7CR;AA+CH","sourcesContent":["export default function AzeriteReducer(state = {\n    cards: [],\n    char_class: \"Select a Class\",\n    sources: {\n        Raid: true,\n        Dungeon: true,\n        PvP: true\n    },\n    slots: {\n        Head: true,\n        Shoulder: true,\n        Chest: true\n    },\n    loading: false\n}, action) {\n    switch (action.type) {\n        case 'LOADING_AZERITE':\n            return {\n                ...state.azerite,\n                loading: true\n            };\n\n        case 'ADD_AZERITE':\n            return {\n                ...state.azerite,\n                cards: {\n                    ...state.azerite.cards,\n                    azerite: action.cards\n                },\n                loading: false\n            };\n\n        case 'DISPLAY_AZERITE':\n            return {\n                ...state.azerite,\n                piece: action.piece,\n                loading: false\n            };\n\n        case 'SET_CLASS':\n            return {\n                ...state.azerite,\n                char_class: action.char_class\n            };\n\n        case 'SET_SOURCE':\n            state.sources[action.source] = !action.value;\n            return {\n                ...state.azerite,\n                sources: { ...state.sources }\n            };\n\n        case 'SET_SLOT':\n            state.slots[action.slot] = !action.value;\n            return {\n                ...state.azerite,\n                slots: { ...state.slots }\n            };\n\n        default:\n            return state.azerite\n    }\n}"]},"metadata":{},"sourceType":"module"}