{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/src/containers/ItemsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport AzeriteCard from '../components/Azerite/AzeriteCard';\nimport TrinketCard from \"../components/Trinkets/TrinketCard\";\nimport CardColumns from 'react-bootstrap/CardColumns';\n\nclass ItemsContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.displayCards = () => {\n      switch (this.props.path) {\n        case \"azerite\" && this.props.cards.azerite.length > 0:\n          console.log(\"hey\");\n          return this.props.cards.azerite.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: \"/azerite/\".concat(card.id),\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17\n            },\n            __self: this\n          }, React.createElement(AzeriteCard, {\n            view: this.props.displayPiece,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17\n            },\n            __self: this\n          })));\n\n        case \"trinkets\" && this.props.cards.trinkets:\n          return this.props.cards.trinkets.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: \"/trinkets/\".concat(card.id),\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }, React.createElement(TrinketCard, {\n            view: this.props.displayPiece,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          })));\n\n        default:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, \"No Items\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.displayCards());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cards: state.cards,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    displayPiece: (id, type) => dispatch({\n      type,\n      id\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemsContainer);","map":{"version":3,"sources":["/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/src/containers/ItemsContainer.js"],"names":["React","Component","connect","NavLink","AzeriteCard","TrinketCard","CardColumns","ItemsContainer","displayCards","props","path","cards","azerite","length","console","log","map","card","color","id","displayPiece","trinkets","render","mapStateToProps","state","loading","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAEnCO,YAFmC,GAEpB,MAAM;AACjB,cAAO,KAAKC,KAAL,CAAWC,IAAlB;AACI,aAAK,aAAa,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,OAAjB,CAAyBC,MAAzB,GAAkC,CAApD;AACIC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,iBAAQ,KAAKN,KAAL,CAAWE,KAAX,CAAiBC,OAAjB,CAAyBI,GAAzB,CAA6BC,IAAI,IACrC,oBAAC,OAAD;AAAS,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAhB;AAAoC,YAAA,EAAE,qBAAcD,IAAI,CAACE,EAAnB,CAAtC;AAA+D,YAAA,GAAG,EAAEF,IAAI,CAACE,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA6E,oBAAC,WAAD;AAAa,YAAA,IAAI,EAAE,KAAKV,KAAL,CAAWW,YAA9B;AAA4C,YAAA,IAAI,EAAEH,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA7E,CADI,CAAR;;AAIJ,aAAK,cAAc,KAAKR,KAAL,CAAWE,KAAX,CAAiBU,QAApC;AACI,iBAAQ,KAAKZ,KAAL,CAAWE,KAAX,CAAiBU,QAAjB,CAA0BL,GAA1B,CAA8BC,IAAI,IACtC,oBAAC,OAAD;AAAS,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAhB;AAAoC,YAAA,EAAE,sBAAeD,IAAI,CAACE,EAApB,CAAtC;AAAgE,YAAA,GAAG,EAAEF,IAAI,CAACE,EAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8E,oBAAC,WAAD;AAAa,YAAA,IAAI,EAAE,KAAKV,KAAL,CAAWW,YAA9B;AAA4C,YAAA,IAAI,EAAEH,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA9E,CADI,CAAR;;AAIJ;AACI,iBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAR;AAbR;AAeH,KAlBkC;AAAA;;AAoBnCK,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKd,YAAL,EADL,CADJ;AAKH;;AA1BkC;;AA6BvC,MAAMe,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHb,IAAAA,KAAK,EAAEa,KAAK,CAACb,KADV;AAEHc,IAAAA,OAAO,EAAED,KAAK,CAACC;AAFZ,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHP,IAAAA,YAAY,EAAE,CAACD,EAAD,EAAKS,IAAL,KAAcD,QAAQ,CAAC;AAAEC,MAAAA,IAAF;AAAQT,MAAAA;AAAR,KAAD;AADjC,GAAP;AAGH,CAJD;;AAMA,eAAejB,OAAO,CAACqB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,cAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport AzeriteCard from '../components/Azerite/AzeriteCard'\nimport TrinketCard from \"../components/Trinkets/TrinketCard\";\n\nimport CardColumns from 'react-bootstrap/CardColumns'\n\nclass ItemsContainer extends Component {\n\n    displayCards = () => {\n        switch(this.props.path) {\n            case \"azerite\" && this.props.cards.azerite.length > 0:\n                console.log(\"hey\")\n                return (this.props.cards.azerite.map(card => (\n                    <NavLink style={{ color: \"black\" }} to={`/azerite/${card.id}`} key={card.id}><AzeriteCard view={this.props.displayPiece} info={card} /></NavLink>\n                )));\n\n            case \"trinkets\" && this.props.cards.trinkets:\n                return (this.props.cards.trinkets.map(card => (\n                    <NavLink style={{ color: \"black\" }} to={`/trinkets/${card.id}`} key={card.id}><TrinketCard view={this.props.displayPiece} info={card} /></NavLink>\n                )));\n\n            default:\n                return (<div>No Items</div>)\n        }\n    };\n\n    render() {\n        return (\n            <CardColumns>\n                {this.displayCards()}\n            </CardColumns>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        cards: state.cards,\n        loading: state.loading\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        displayPiece: (id, type) => dispatch({ type, id })\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemsContainer)"]},"metadata":{},"sourceType":"module"}