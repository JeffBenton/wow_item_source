{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/src/components/Weapons/FilterWeapons.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchWeapons } from \"../../actions/itemActions\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nclass FilterWeapons extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleRoleSelection = e => {\n      this.props.setRole(e.target.title);\n    };\n\n    this.handleSourceSelection = e => {\n      const value = this.props.sources[e.target.id];\n      this.props.setSource(e.target.id, value);\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(DropdownButton, {\n      id: \"dropdown-class-button\",\n      title: this.props.role,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, ['Str 2h', 'Agi 1h'].map(role => React.createElement(\"div\", {\n      key: role,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      onClick: this.handleRoleSelection,\n      title: role,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, role)))), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, ['Raid', 'Dungeon', 'PvP'].map(source => React.createElement(\"div\", {\n      key: source,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      onChange: this.handleSourceSelection,\n      custom: true,\n      checked: this.props.sources[source],\n      label: source,\n      type: \"checkbox\",\n      id: source,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    role: state.weapons.role,\n    sources: state.weapons.sources\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchWeapons: params => dispatch(fetchWeapons(params)),\n    setSource: (source, value) => dispatch({\n      type: \"SET_SOURCE\",\n      source,\n      value\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterWeapons);","map":{"version":3,"sources":["/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/src/components/Weapons/FilterWeapons.js"],"names":["React","Component","connect","fetchWeapons","Dropdown","DropdownButton","Form","Container","Row","FilterWeapons","handleRoleSelection","e","props","setRole","target","title","handleSourceSelection","value","sources","id","setSource","render","role","map","source","mapStateToProps","state","weapons","mapDispatchToProps","dispatch","params","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchWeapons } from \"../../actions/itemActions\";\n\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Form from 'react-bootstrap/Form'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\n\n\nclass FilterWeapons extends Component {\n\n    handleRoleSelection = e => {\n        this.props.setRole(e.target.title);\n    };\n\n    handleSourceSelection = e => {\n        const value = this.props.sources[e.target.id];\n        this.props.setSource(e.target.id, value);\n    };\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <DropdownButton id=\"dropdown-class-button\" title={this.props.role}>\n                        {['Str 2h', 'Agi 1h'].map(role => (\n                            <div key={role}>\n                                <Dropdown.Item onClick={this.handleRoleSelection} title={role}>{role}</Dropdown.Item>\n                            </div>\n                        ))}\n                    </DropdownButton>\n\n                    <Form>\n                        {['Raid', 'Dungeon', 'PvP'].map(source => (\n                            <div key={source}>\n                                <Form.Check\n                                    onChange={this.handleSourceSelection}\n                                    custom\n                                    checked={this.props.sources[source]}\n                                    label={source}\n                                    type=\"checkbox\"\n                                    id={source}\n                                />\n                            </div>\n                        ))}\n                    </Form>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        role: state.weapons.role,\n        sources: state.weapons.sources,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchWeapons: params => dispatch(fetchWeapons(params)),\n        setSource: (source, value) => dispatch({ type: \"SET_SOURCE\", source, value }),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterWeapons)\n"]},"metadata":{},"sourceType":"module"}