{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/src/containers/ItemsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport AzeriteCard from '../components/Azerite/AzeriteCard';\nimport TrinketCard from \"../components/Trinkets/TrinketCard\";\nimport WeaponCard from \"../components/Weapons/WeaponCard\";\nimport { displayPiece } from \"../actions/itemActions\";\nimport CardColumns from 'react-bootstrap/CardColumns';\n\nclass ItemsContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.displayCards = () => {\n      switch (this.props.path) {\n        case \"azerite\":\n          return this.props.azerite.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: \"/azerite/\".concat(card.id),\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }, React.createElement(AzeriteCard, {\n            view: this.props.displayPiece,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          })));\n\n        case \"trinkets\":\n          return this.props.trinkets.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: \"/trinkets/\".concat(card.id),\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, React.createElement(TrinketCard, {\n            view: this.props.displayPiece,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          })));\n\n        case \"weapons\":\n          return this.props.weapons.cards.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: \"/weapons/\".concat(card.id),\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(WeaponCard, {\n            view: this.props.displayPiece,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          })));\n\n        default:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, \"No Items\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.displayCards());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    azerite: state.azerite,\n    trinkets: state.trinkets,\n    weapons: state.weapons\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // displayPiece: (id, type) => dispatch({ type, id })\n    displayPiece: (id, category, type) => dispatch(displayPiece(id, category, type))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemsContainer);","map":{"version":3,"sources":["/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/src/containers/ItemsContainer.js"],"names":["React","Component","connect","NavLink","AzeriteCard","TrinketCard","WeaponCard","displayPiece","CardColumns","ItemsContainer","displayCards","props","path","azerite","cards","map","card","color","id","trinkets","weapons","render","mapStateToProps","state","mapDispatchToProps","dispatch","category","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport AzeriteCard from '../components/Azerite/AzeriteCard'\nimport TrinketCard from \"../components/Trinkets/TrinketCard\";\nimport WeaponCard from \"../components/Weapons/WeaponCard\";\nimport { displayPiece } from \"../actions/itemActions\"\n\nimport CardColumns from 'react-bootstrap/CardColumns'\n\nclass ItemsContainer extends Component {\n\n    displayCards = () => {\n        switch(this.props.path) {\n            case \"azerite\":\n                return (this.props.azerite.cards.map(card => (\n                    <NavLink style={{ color: \"black\" }} to={`/azerite/${card.id}`} key={card.id}><AzeriteCard view={this.props.displayPiece} info={card} /></NavLink>\n                )));\n\n            case \"trinkets\":\n                return (this.props.trinkets.cards.map(card => (\n                    <NavLink style={{ color: \"black\" }} to={`/trinkets/${card.id}`} key={card.id}><TrinketCard view={this.props.displayPiece} info={card} /></NavLink>\n                )));\n\n            case \"weapons\":\n                return (this.props.weapons.cards.map(card => (\n                    <NavLink style={{ color: \"black\" }} to={`/weapons/${card.id}`} key={card.id}><WeaponCard view={this.props.displayPiece} info={card} /></NavLink>\n                )));\n\n            default:\n                return (<div>No Items</div>)\n        }\n    };\n\n    render() {\n        return (\n            <CardColumns>\n                {this.displayCards()}\n            </CardColumns>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        azerite: state.azerite,\n        trinkets: state.trinkets,\n        weapons: state.weapons\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        // displayPiece: (id, type) => dispatch({ type, id })\n        displayPiece: (id, category, type) => dispatch(displayPiece(id, category, type))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemsContainer)"]},"metadata":{},"sourceType":"module"}