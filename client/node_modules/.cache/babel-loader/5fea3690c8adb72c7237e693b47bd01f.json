{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/src/containers/ItemsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCards } from \"../actions/itemActions\";\nimport { NavLink } from 'react-router-dom';\nimport AzeriteCard from '../components/Azerite/AzeriteCard';\nimport TrinketCard from \"../components/Trinkets/TrinketCard\";\nimport CardColumns from 'react-bootstrap/CardColumns';\n\nclass ItemsContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards: {\n        azerite: [],\n        weapons: [],\n        trinkets: []\n      }\n    };\n\n    this.displayCards = () => {\n      switch (this.props.path) {\n        case \"azerite\":\n          return this.props.cards.azerite.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: \"/azerite/\".concat(card.id),\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(AzeriteCard, {\n            view: this.props.displayPiece,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          })));\n\n        case \"trinkets\":\n          return this.props.cards.trinkets.map(card => React.createElement(NavLink, {\n            style: {\n              color: \"black\"\n            },\n            to: \"/trinkets/\".concat(card.id),\n            key: card.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, React.createElement(TrinketCard, {\n            view: this.props.displayPiece,\n            info: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          })));\n\n        default:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, \"No Items\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchCards(this.props.path);\n  }\n\n  render() {\n    return React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.displayCards());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cards: state.cards,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCards: path => dispatch(fetchCards(path)),\n    displayPiece: (id, type) => dispatch({\n      type,\n      id\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemsContainer);","map":{"version":3,"sources":["/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/src/containers/ItemsContainer.js"],"names":["React","Component","connect","fetchCards","NavLink","AzeriteCard","TrinketCard","CardColumns","ItemsContainer","state","cards","azerite","weapons","trinkets","displayCards","props","path","map","card","color","id","displayPiece","componentDidMount","render","mapStateToProps","loading","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCQ,KAFmC,GAE3B;AACJC,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE,EADN;AAEHC,QAAAA,OAAO,EAAE,EAFN;AAGHC,QAAAA,QAAQ,EAAE;AAHP;AADH,KAF2B;;AAAA,SAcnCC,YAdmC,GAcpB,MAAM;AACjB,cAAO,KAAKC,KAAL,CAAWC,IAAlB;AACI,aAAK,SAAL;AACI,iBAAQ,KAAKD,KAAL,CAAWL,KAAX,CAAiBC,OAAjB,CAAyBM,GAAzB,CAA6BC,IAAI,IACrC,oBAAC,OAAD;AAAS,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAhB;AAAoC,YAAA,EAAE,qBAAcD,IAAI,CAACE,EAAnB,CAAtC;AAA+D,YAAA,GAAG,EAAEF,IAAI,CAACE,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA6E,oBAAC,WAAD;AAAa,YAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM,YAA9B;AAA4C,YAAA,IAAI,EAAEH,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA7E,CADI,CAAR;;AAIJ,aAAK,UAAL;AACI,iBAAQ,KAAKH,KAAL,CAAWL,KAAX,CAAiBG,QAAjB,CAA0BI,GAA1B,CAA8BC,IAAI,IACtC,oBAAC,OAAD;AAAS,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAhB;AAAoC,YAAA,EAAE,sBAAeD,IAAI,CAACE,EAApB,CAAtC;AAAgE,YAAA,GAAG,EAAEF,IAAI,CAACE,EAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8E,oBAAC,WAAD;AAAa,YAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM,YAA9B;AAA4C,YAAA,IAAI,EAAEH,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA9E,CADI,CAAR;;AAIJ;AACI,iBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAR;AAZR;AAcH,KA7BkC;AAAA;;AAUnCI,EAAAA,iBAAiB,GAAG;AAChB,SAAKP,KAAL,CAAWZ,UAAX,CAAsB,KAAKY,KAAL,CAAWC,IAAjC;AACH;;AAmBDO,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,YAAL,EADL,CADJ;AAKH;;AArCkC;;AAwCvC,MAAMU,eAAe,GAAGf,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADV;AAEHe,IAAAA,OAAO,EAAEhB,KAAK,CAACgB;AAFZ,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHxB,IAAAA,UAAU,EAAEa,IAAI,IAAIW,QAAQ,CAACxB,UAAU,CAACa,IAAD,CAAX,CADzB;AAEHK,IAAAA,YAAY,EAAE,CAACD,EAAD,EAAKQ,IAAL,KAAcD,QAAQ,CAAC;AAAEC,MAAAA,IAAF;AAAQR,MAAAA;AAAR,KAAD;AAFjC,GAAP;AAIH,CALD;;AAOA,eAAelB,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,cAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCards } from \"../actions/itemActions\";\nimport { NavLink } from 'react-router-dom';\n\nimport AzeriteCard from '../components/Azerite/AzeriteCard'\nimport TrinketCard from \"../components/Trinkets/TrinketCard\";\n\nimport CardColumns from 'react-bootstrap/CardColumns'\n\nclass ItemsContainer extends Component {\n\n    state = {\n        cards: {\n            azerite: [],\n            weapons: [],\n            trinkets: []\n        }\n    };\n\n    componentDidMount() {\n        this.props.fetchCards(this.props.path)\n    }\n\n    displayCards = () => {\n        switch(this.props.path) {\n            case \"azerite\":\n                return (this.props.cards.azerite.map(card => (\n                    <NavLink style={{ color: \"black\" }} to={`/azerite/${card.id}`} key={card.id}><AzeriteCard view={this.props.displayPiece} info={card} /></NavLink>\n                )));\n\n            case \"trinkets\":\n                return (this.props.cards.trinkets.map(card => (\n                    <NavLink style={{ color: \"black\" }} to={`/trinkets/${card.id}`} key={card.id}><TrinketCard view={this.props.displayPiece} info={card} /></NavLink>\n                )));\n\n            default:\n                return (<div>No Items</div>)\n        }\n    };\n\n    render() {\n        return (\n            <CardColumns>\n                {this.displayCards()}\n            </CardColumns>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        cards: state.cards,\n        loading: state.loading\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchCards: path => dispatch(fetchCards(path)),\n        displayPiece: (id, type) => dispatch({ type, id })\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemsContainer)"]},"metadata":{},"sourceType":"module"}