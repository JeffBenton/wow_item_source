{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/src/components/Weapons/FilterWeapons.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchItems } from \"../../actions/itemActions\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nclass FilterWeapons extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleRoleSelection = e => {\n      this.props.setRole(e.target.title);\n      this.props.fetchItems(\"weapons\", {\n        role: e.target.title,\n        sources: this.props.sources\n      });\n    };\n\n    this.handleSourceSelection = e => {\n      const value = this.props.sources[e.target.id];\n      this.props.setSource(e.target.id, value);\n      this.props.fetchItems(\"weapons\", {\n        role: this.props.role,\n        sources: this.props.sources\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(DropdownButton, {\n      id: \"dropdown-class-button\",\n      title: this.props.role,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, ['Str 2h', 'Agi 1h'].map(role => React.createElement(\"div\", {\n      key: role,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      onClick: this.handleRoleSelection,\n      title: role,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, role)))), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, ['Raid', 'Dungeon', 'PvP'].map(source => React.createElement(\"div\", {\n      key: source,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      onChange: this.handleSourceSelection,\n      custom: true,\n      checked: this.props.sources[source],\n      label: source,\n      type: \"checkbox\",\n      id: source,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    role: state.weapons.role,\n    sources: state.weapons.sources\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchItems: (path, params) => dispatch(fetchItems(path, params)),\n    setRole: role => dispatch({\n      type: \"SET_WEAPON_ROLE\",\n      role\n    }),\n    setSource: (source, value) => dispatch({\n      type: \"SET_WEAPON_SOURCE\",\n      source,\n      value\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterWeapons);","map":{"version":3,"sources":["/Users/jeffreybenton/Documents/Coding Things/react/wow_item_source/client/src/components/Weapons/FilterWeapons.js"],"names":["React","Component","connect","fetchItems","Dropdown","DropdownButton","Form","Container","Row","FilterWeapons","handleRoleSelection","e","props","setRole","target","title","role","sources","handleSourceSelection","value","id","setSource","render","map","source","mapStateToProps","state","weapons","mapDispatchToProps","dispatch","path","params","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchItems } from \"../../actions/itemActions\";\n\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Form from 'react-bootstrap/Form'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\n\n\nclass FilterWeapons extends Component {\n\n    handleRoleSelection = e => {\n        this.props.setRole(e.target.title);\n        this.props.fetchItems(\"weapons\", { role: e.target.title, sources: this.props.sources })\n    };\n\n    handleSourceSelection = e => {\n        const value = this.props.sources[e.target.id];\n        this.props.setSource(e.target.id, value);\n        this.props.fetchItems(\"weapons\", { role: this.props.role, sources: this.props.sources })\n    };\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <DropdownButton id=\"dropdown-class-button\" title={this.props.role}>\n                        {['Str 2h', 'Agi 1h'].map(role => (\n                            <div key={role}>\n                                <Dropdown.Item onClick={this.handleRoleSelection} title={role}>{role}</Dropdown.Item>\n                            </div>\n                        ))}\n                    </DropdownButton>\n\n                    <Form>\n                        {['Raid', 'Dungeon', 'PvP'].map(source => (\n                            <div key={source}>\n                                <Form.Check\n                                    onChange={this.handleSourceSelection}\n                                    custom\n                                    checked={this.props.sources[source]}\n                                    label={source}\n                                    type=\"checkbox\"\n                                    id={source}\n                                />\n                            </div>\n                        ))}\n                    </Form>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        role: state.weapons.role,\n        sources: state.weapons.sources,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchItems: (path, params) => dispatch(fetchItems(path, params)),\n        setRole: role => dispatch({ type: \"SET_WEAPON_ROLE\", role }),\n        setSource: (source, value) => dispatch({ type: \"SET_WEAPON_SOURCE\", source, value }),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterWeapons)\n"]},"metadata":{},"sourceType":"module"}